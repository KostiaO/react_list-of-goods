{"version":3,"sources":["types/SortType.ts","components/GoodsList.tsx","App.tsx","index.tsx"],"names":["SortType","GoodsList","goodsFromServer","isReverse","SortBy","lengthMin","copyOFGoods","filter","good","length","Alfabet","sort","g1","g2","localeCompare","Length","reverse","map","React","memo","options","Array","fill","_","i","App","state","isVisible","Nothing","StartList","setState","ReverseList","SortByAlfabet","SortByLen","ResetAll","minLengthOfGood","value","this","className","type","onClick","name","id","onChange","currentTarget","Number","option","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAAYA,E,4EAAAA,K,kBAAAA,E,gBAAAA,E,mBAAAA,M,gBCUNC,EAA6B,SAAC,GAE7B,IADLC,EACI,EADJA,gBAAiBC,EACb,EADaA,UAAWC,EACxB,EADwBA,OAAQC,EAChC,EADgCA,UAE9BC,EAAcJ,EAAgBK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUJ,KAElE,OAAQD,GACN,KAAKJ,EAASU,QACZJ,EAAYK,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAC9C,MACF,KAAKb,EAASe,OACZT,EAAYK,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGH,OAASI,EAAGJ,UAUhD,OAJIN,GACFG,EAAYU,UAIZ,6BACGV,EAAYW,KAAI,SAAAT,GAAI,OACnB,6BACGA,GADMA,SAQFU,MAAMC,KAAKlB,GCpCpBC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIkB,EAAUC,MAAM,IAAIC,KAAK,GAAGL,KAAI,SAACM,EAAGC,GAAJ,OAAUA,EAAI,KASvCC,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXxB,WAAW,EACXC,OAAQJ,EAAS4B,QACjBvB,UAAW,GALf,EAQEwB,UAAY,kBACV,EAAKC,SAAS,CAAEH,WAAW,KAT/B,EAYEI,YAAc,WACZ,EAAKD,UAAS,SAAAJ,GAAK,MAAK,CACtBvB,WAAYuB,EAAMvB,eAdxB,EAkBE6B,cAAgB,WACd,EAAKF,SAAS,CACZ1B,OAAQJ,EAASU,WApBvB,EAwBEuB,UAAY,WACV,EAAKH,SAAS,CACZ1B,OAAQJ,EAASe,UA1BvB,EA8BEmB,SAAW,WACT,EAAKJ,SAAS,CACZ3B,WAAW,EACXC,OAAQJ,EAAS4B,WAjCvB,EAqCEO,gBAAkB,SAACC,GACjB,EAAKN,SAAS,CACZzB,UAAW+B,KAvCjB,4CA2CE,WAAU,IAAD,OACP,EAA8BC,KAAKX,MAA3BC,EAAR,EAAQA,UAAWvB,EAAnB,EAAmBA,OAEnB,OACE,sBAAKkC,UAAU,MAAf,UACE,uCACCX,GACC,qCACE,cAAC,EAAD,CACEzB,gBAAiBA,EACjBC,UAAWkC,KAAKX,MAAMvB,UACtBC,OAAQA,EACRC,UAAWgC,KAAKX,MAAMrB,YAExB,wBACEkC,KAAK,SACLC,QAASH,KAAKN,YAFhB,qBAOA,wBACEQ,KAAK,SACLC,QAASH,KAAKL,cAFhB,2BAOA,wBACEO,KAAK,SACLC,QAASH,KAAKJ,UAFhB,uBAOA,wBACEM,KAAK,SACLC,QAASH,KAAKH,SAFhB,mBAMA,uBACA,wBACEO,KAAK,SACLC,GAAG,OACHC,SACE,YAAwB,IAArBC,EAAoB,EAApBA,cACD,EAAKT,gBAAgBU,OAAOD,EAAcR,SALhD,SASGhB,EAAQH,KAAI,SAAA6B,GAAM,OACjB,wBAEEV,MAAOU,EAFT,SAIGA,GAHIA,YASbnB,GACA,wBACEY,KAAK,SACLC,QAASH,KAAKR,UAFhB,0BA1GV,GAAyBX,IAAM6B,WCxB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.05da8668.chunk.js","sourcesContent":["export enum SortType {\n  Alfabet = 'alfabet',\n  Length = 'length',\n  Nothing = 'nothing',\n}\n","import React from 'react';\nimport { SortType } from '../types/SortType';\n\ntype Props = {\n  goodsFromServer: string[],\n  isReverse: boolean,\n  SortBy: SortType,\n  lengthMin: number\n};\n\nconst GoodsList: React.FC<Props> = ({\n  goodsFromServer, isReverse, SortBy, lengthMin,\n}) => {\n  const copyOFGoods = goodsFromServer.filter(good => good.length >= lengthMin);\n\n  switch (SortBy) {\n    case SortType.Alfabet:\n      copyOFGoods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n    case SortType.Length:\n      copyOFGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReverse) {\n    copyOFGoods.reverse();\n  }\n\n  return (\n    <ul>\n      {copyOFGoods.map(good => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default React.memo(GoodsList);\n","import React from 'react';\nimport './App.css';\nimport GoodsList from './components/GoodsList';\nimport { SortType } from './types/SortType';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst options = Array(10).fill(0).map((_, i) => i + 1);\n\ntype StateType = {\n  isVisible: boolean,\n  isReverse: boolean,\n  SortBy: SortType,\n  lengthMin: number\n};\n\nexport class App extends React.Component<{}, StateType> {\n  state = {\n    isVisible: false,\n    isReverse: false,\n    SortBy: SortType.Nothing,\n    lengthMin: 1,\n  };\n\n  StartList = () => (\n    this.setState({ isVisible: true })\n  );\n\n  ReverseList = () => {\n    this.setState(state => ({\n      isReverse: !state.isReverse,\n    }));\n  };\n\n  SortByAlfabet = () => {\n    this.setState({\n      SortBy: SortType.Alfabet,\n    });\n  };\n\n  SortByLen = () => {\n    this.setState({\n      SortBy: SortType.Length,\n    });\n  };\n\n  ResetAll = () => {\n    this.setState({\n      isReverse: false,\n      SortBy: SortType.Nothing,\n    });\n  };\n\n  minLengthOfGood = (value: number) => {\n    this.setState({\n      lengthMin: value,\n    });\n  };\n\n  render() {\n    const { isVisible, SortBy } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {isVisible && (\n          <>\n            <GoodsList\n              goodsFromServer={goodsFromServer}\n              isReverse={this.state.isReverse}\n              SortBy={SortBy}\n              lengthMin={this.state.lengthMin}\n            />\n            <button\n              type=\"button\"\n              onClick={this.ReverseList}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.SortByAlfabet}\n            >\n              SortByAlfabet\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.SortByLen}\n            >\n              SortByLen\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.ResetAll}\n            >\n              Reset\n            </button>\n            <br />\n            <select\n              name=\"select\"\n              id=\"nums\"\n              onChange={\n                ({ currentTarget }) => {\n                  this.minLengthOfGood(Number(currentTarget.value));\n                }\n              }\n            >\n              {options.map(option => (\n                <option\n                  key={option}\n                  value={option}\n                >\n                  {option}\n                </option>\n              ))}\n            </select>\n          </>\n        )}\n        {!isVisible && (\n          <button\n            type=\"button\"\n            onClick={this.StartList}\n          >\n            Start\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}